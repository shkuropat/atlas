// source: objects_list.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var file_pb = require('./file_pb.js');
goog.object.extend(proto, file_pb);
var report_pb = require('./report_pb.js');
goog.object.extend(proto, report_pb);
var task_pb = require('./task_pb.js');
goog.object.extend(proto, task_pb);
var status_pb = require('./status_pb.js');
goog.object.extend(proto, status_pb);
goog.exportSymbol('proto.atlas.ObjectsList', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.atlas.ObjectsList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, proto.atlas.ObjectsList.repeatedFields_, null);
};
goog.inherits(proto.atlas.ObjectsList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.atlas.ObjectsList.displayName = 'proto.atlas.ObjectsList';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.atlas.ObjectsList.repeatedFields_ = [500,600,700,800];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.atlas.ObjectsList.prototype.toObject = function(opt_includeInstance) {
  return proto.atlas.ObjectsList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.atlas.ObjectsList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.atlas.ObjectsList.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && status_pb.Status.toObject(includeInstance, f),
    reportsList: jspb.Message.toObjectList(msg.getReportsList(),
    report_pb.Report.toObject, includeInstance),
    tasksList: jspb.Message.toObjectList(msg.getTasksList(),
    task_pb.Task.toObject, includeInstance),
    statusesList: jspb.Message.toObjectList(msg.getStatusesList(),
    status_pb.Status.toObject, includeInstance),
    filesList: jspb.Message.toObjectList(msg.getFilesList(),
    file_pb.File.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.atlas.ObjectsList}
 */
proto.atlas.ObjectsList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.atlas.ObjectsList;
  return proto.atlas.ObjectsList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.atlas.ObjectsList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.atlas.ObjectsList}
 */
proto.atlas.ObjectsList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 100:
      var value = new status_pb.Status;
      reader.readMessage(value,status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 500:
      var value = new report_pb.Report;
      reader.readMessage(value,report_pb.Report.deserializeBinaryFromReader);
      msg.addReports(value);
      break;
    case 600:
      var value = new task_pb.Task;
      reader.readMessage(value,task_pb.Task.deserializeBinaryFromReader);
      msg.addTasks(value);
      break;
    case 700:
      var value = new status_pb.Status;
      reader.readMessage(value,status_pb.Status.deserializeBinaryFromReader);
      msg.addStatuses(value);
      break;
    case 800:
      var value = new file_pb.File;
      reader.readMessage(value,file_pb.File.deserializeBinaryFromReader);
      msg.addFiles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.atlas.ObjectsList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.atlas.ObjectsList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.atlas.ObjectsList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.atlas.ObjectsList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getReportsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      500,
      f,
      report_pb.Report.serializeBinaryToWriter
    );
  }
  f = message.getTasksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      600,
      f,
      task_pb.Task.serializeBinaryToWriter
    );
  }
  f = message.getStatusesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      700,
      f,
      status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getFilesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      800,
      f,
      file_pb.File.serializeBinaryToWriter
    );
  }
};


/**
 * optional Status status = 100;
 * @return {?proto.atlas.Status}
 */
proto.atlas.ObjectsList.prototype.getStatus = function() {
  return /** @type{?proto.atlas.Status} */ (
    jspb.Message.getWrapperField(this, status_pb.Status, 100));
};


/**
 * @param {?proto.atlas.Status|undefined} value
 * @return {!proto.atlas.ObjectsList} returns this
*/
proto.atlas.ObjectsList.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.atlas.ObjectsList} returns this
 */
proto.atlas.ObjectsList.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.atlas.ObjectsList.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 100) != null;
};


/**
 * repeated Report reports = 500;
 * @return {!Array<!proto.atlas.Report>}
 */
proto.atlas.ObjectsList.prototype.getReportsList = function() {
  return /** @type{!Array<!proto.atlas.Report>} */ (
    jspb.Message.getRepeatedWrapperField(this, report_pb.Report, 500));
};


/**
 * @param {!Array<!proto.atlas.Report>} value
 * @return {!proto.atlas.ObjectsList} returns this
*/
proto.atlas.ObjectsList.prototype.setReportsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 500, value);
};


/**
 * @param {!proto.atlas.Report=} opt_value
 * @param {number=} opt_index
 * @return {!proto.atlas.Report}
 */
proto.atlas.ObjectsList.prototype.addReports = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 500, opt_value, proto.atlas.Report, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.atlas.ObjectsList} returns this
 */
proto.atlas.ObjectsList.prototype.clearReportsList = function() {
  return this.setReportsList([]);
};


/**
 * repeated Task tasks = 600;
 * @return {!Array<!proto.atlas.Task>}
 */
proto.atlas.ObjectsList.prototype.getTasksList = function() {
  return /** @type{!Array<!proto.atlas.Task>} */ (
    jspb.Message.getRepeatedWrapperField(this, task_pb.Task, 600));
};


/**
 * @param {!Array<!proto.atlas.Task>} value
 * @return {!proto.atlas.ObjectsList} returns this
*/
proto.atlas.ObjectsList.prototype.setTasksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 600, value);
};


/**
 * @param {!proto.atlas.Task=} opt_value
 * @param {number=} opt_index
 * @return {!proto.atlas.Task}
 */
proto.atlas.ObjectsList.prototype.addTasks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 600, opt_value, proto.atlas.Task, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.atlas.ObjectsList} returns this
 */
proto.atlas.ObjectsList.prototype.clearTasksList = function() {
  return this.setTasksList([]);
};


/**
 * repeated Status statuses = 700;
 * @return {!Array<!proto.atlas.Status>}
 */
proto.atlas.ObjectsList.prototype.getStatusesList = function() {
  return /** @type{!Array<!proto.atlas.Status>} */ (
    jspb.Message.getRepeatedWrapperField(this, status_pb.Status, 700));
};


/**
 * @param {!Array<!proto.atlas.Status>} value
 * @return {!proto.atlas.ObjectsList} returns this
*/
proto.atlas.ObjectsList.prototype.setStatusesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 700, value);
};


/**
 * @param {!proto.atlas.Status=} opt_value
 * @param {number=} opt_index
 * @return {!proto.atlas.Status}
 */
proto.atlas.ObjectsList.prototype.addStatuses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 700, opt_value, proto.atlas.Status, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.atlas.ObjectsList} returns this
 */
proto.atlas.ObjectsList.prototype.clearStatusesList = function() {
  return this.setStatusesList([]);
};


/**
 * repeated File files = 800;
 * @return {!Array<!proto.atlas.File>}
 */
proto.atlas.ObjectsList.prototype.getFilesList = function() {
  return /** @type{!Array<!proto.atlas.File>} */ (
    jspb.Message.getRepeatedWrapperField(this, file_pb.File, 800));
};


/**
 * @param {!Array<!proto.atlas.File>} value
 * @return {!proto.atlas.ObjectsList} returns this
*/
proto.atlas.ObjectsList.prototype.setFilesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 800, value);
};


/**
 * @param {!proto.atlas.File=} opt_value
 * @param {number=} opt_index
 * @return {!proto.atlas.File}
 */
proto.atlas.ObjectsList.prototype.addFiles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 800, opt_value, proto.atlas.File, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.atlas.ObjectsList} returns this
 */
proto.atlas.ObjectsList.prototype.clearFilesList = function() {
  return this.setFilesList([]);
};


goog.object.extend(exports, proto.atlas);
